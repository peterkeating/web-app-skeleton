# the project directory that contains all the files to do with the project.
project.dir = ${basedir}

# contains the application code.
app.dir = ${project.dir}/app

# directory that will contain the polished product ready for use.
dist.dir = ${project.dir}/dist

# directory used during the build to contains project files ensuring that src files
# aren't interfered with.
intermediate.dir = ${project.dir}/intermediate

# directory that contains all the files related to the automated build process.
build.dir = ${project.dir}/build

# contains all the source files that make up the product.
src.dir = ${project.dir}/src

# contains source files that are directly related to the project.
app.dir = ${src.dir}/app

# directory that contains all the tools that are used during the build process.
tools.dir = ${build.dir}/tools

# Ant Contrib provides additional useful features to Ant. Read more about the
# additional tasks that are provided from the link below.
#
# - http://ant-contrib.sourceforge.net/
tool.antcontrib = ${tools.dir}/ant-contrib/ant-contrib-1.0b3.jar

# YUICompressor is a tool for minifying CSS & JavaScript in order to reduce the
# size of a file in order to reduce the time to load yet ensuring that the file
# still functions as expected. To learn more about this open source tool check
# the links below.
#
# - http://yui.github.com/yuicompressor/
# - http://developer.yahoo.com/yui/compressor/
tool.yuicompressor = ${tools.dir}/yuicompressor/yuicompressor-2.4.7.jar

# Rhino is developed by Mozilla to enable developers to run JavaScript in a Java
# environment. Rhino is used in the build process in order to run r.js, which you
# can read more about below.
#
# -https://developer.mozilla.org/en-US/docs/Rhino_documentation
tool.rhino = ${tools.dir}/rhino/rhino.jar

# RequireJS is used in the application in order to improve architecture, quality,
# speed & testability of the JavaScript. RequireJS is a module loader that takes
# care of loading JavaScript files in a valid order when the module is required.
# Also part of the library is r.js which includes an optimizer that is utilised
# during the build process. During development it is fine that the modules are
# loaded with separate HTTP requests to the files that define them, however in
# a live production environment this is seen as a performance hinderer. The RequireJS
# optimizer combats this by placing all the required modules for the application
# into a single JavaScript file to reduce the number of HTTP requests.
#
# - http://requirejs.org
# - http://requirejs.org/docs/optimization.html
# - https://github.com/jrburke/r.js/
tool.rjsoptimizer = ${tools.dir}/r.js/r.js

# Build profile used to instruct the RequireJS optimizer how to operate with various
# configuration settings that are explained in the link below.
#
# - https://github.com/jrburke/r.js/blob/master/build/example.build.js
rjs.optimizer.settings = ${app.dir}/js/build.js

# Comma separated list of HTML pages that should be modified during the build process
# to ensure their URLs to CSS & JavaScript files are pointing to the minified cache
# busted versions.
page-files = index.html

# length of the randomly generated filename used to cache bust the CSS & JavaScript.
hash.length = 8
